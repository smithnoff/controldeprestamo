//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("dbControlCobranzasModel", "FK_usuarios_personas", "personas", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CapaModelo.persona), "usuarios", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapaModelo.usuario), true)]
[assembly: EdmRelationshipAttribute("dbControlCobranzasModel", "FK_usuarios_rolUsuario", "rolUsuario", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CapaModelo.rolUsuario), "usuarios", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapaModelo.usuario), true)]
[assembly: EdmRelationshipAttribute("dbControlCobranzasModel", "ContratosClientes", "Contratos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapaModelo.Contratos), "Clientes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapaModelo.Clientes))]
[assembly: EdmRelationshipAttribute("dbControlCobranzasModel", "BancosClientes", "Bancos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapaModelo.Bancos), "Clientes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapaModelo.Clientes))]
[assembly: EdmRelationshipAttribute("dbControlCobranzasModel", "usuarioClientes", "usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapaModelo.usuario), "Clientes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapaModelo.Clientes))]
[assembly: EdmRelationshipAttribute("dbControlCobranzasModel", "DetallesContratosContratos", "DetallesContratos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CapaModelo.DetallesContratos), "Contratos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CapaModelo.Contratos))]

#endregion

namespace CapaModelo
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class dbControlCobranzasEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new dbControlCobranzasEntities object using the connection string found in the 'dbControlCobranzasEntities' section of the application configuration file.
        /// </summary>
        public dbControlCobranzasEntities() : base("name=dbControlCobranzasEntities", "dbControlCobranzasEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dbControlCobranzasEntities object.
        /// </summary>
        public dbControlCobranzasEntities(string connectionString) : base(connectionString, "dbControlCobranzasEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dbControlCobranzasEntities object.
        /// </summary>
        public dbControlCobranzasEntities(EntityConnection connection) : base(connection, "dbControlCobranzasEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<persona> personas
        {
            get
            {
                if ((_personas == null))
                {
                    _personas = base.CreateObjectSet<persona>("personas");
                }
                return _personas;
            }
        }
        private ObjectSet<persona> _personas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rolUsuario> rolUsuarios
        {
            get
            {
                if ((_rolUsuarios == null))
                {
                    _rolUsuarios = base.CreateObjectSet<rolUsuario>("rolUsuarios");
                }
                return _rolUsuarios;
            }
        }
        private ObjectSet<rolUsuario> _rolUsuarios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usuario> usuarios
        {
            get
            {
                if ((_usuarios == null))
                {
                    _usuarios = base.CreateObjectSet<usuario>("usuarios");
                }
                return _usuarios;
            }
        }
        private ObjectSet<usuario> _usuarios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bancos> Bancos
        {
            get
            {
                if ((_Bancos == null))
                {
                    _Bancos = base.CreateObjectSet<Bancos>("Bancos");
                }
                return _Bancos;
            }
        }
        private ObjectSet<Bancos> _Bancos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Clientes> Clientes
        {
            get
            {
                if ((_Clientes == null))
                {
                    _Clientes = base.CreateObjectSet<Clientes>("Clientes");
                }
                return _Clientes;
            }
        }
        private ObjectSet<Clientes> _Clientes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contratos> Contratos
        {
            get
            {
                if ((_Contratos == null))
                {
                    _Contratos = base.CreateObjectSet<Contratos>("Contratos");
                }
                return _Contratos;
            }
        }
        private ObjectSet<Contratos> _Contratos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DetallesContratos> DetallesContratos
        {
            get
            {
                if ((_DetallesContratos == null))
                {
                    _DetallesContratos = base.CreateObjectSet<DetallesContratos>("DetallesContratos");
                }
                return _DetallesContratos;
            }
        }
        private ObjectSet<DetallesContratos> _DetallesContratos;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the personas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopersonas(persona persona)
        {
            base.AddObject("personas", persona);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the rolUsuarios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorolUsuarios(rolUsuario rolUsuario)
        {
            base.AddObject("rolUsuarios", rolUsuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usuarios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousuarios(usuario usuario)
        {
            base.AddObject("usuarios", usuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bancos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBancos(Bancos bancos)
        {
            base.AddObject("Bancos", bancos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clientes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientes(Clientes clientes)
        {
            base.AddObject("Clientes", clientes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contratos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContratos(Contratos contratos)
        {
            base.AddObject("Contratos", contratos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DetallesContratos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDetallesContratos(DetallesContratos detallesContratos)
        {
            base.AddObject("DetallesContratos", detallesContratos);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbControlCobranzasModel", Name="Bancos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bancos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bancos object.
        /// </summary>
        /// <param name="pkBancosID">Initial value of the pkBancosID property.</param>
        public static Bancos CreateBancos(global::System.Int32 pkBancosID)
        {
            Bancos bancos = new Bancos();
            bancos.pkBancosID = pkBancosID;
            return bancos;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pkBancosID
        {
            get
            {
                return _pkBancosID;
            }
            set
            {
                if (_pkBancosID != value)
                {
                    OnpkBancosIDChanging(value);
                    ReportPropertyChanging("pkBancosID");
                    _pkBancosID = StructuralObject.SetValidValue(value, "pkBancosID");
                    ReportPropertyChanged("pkBancosID");
                    OnpkBancosIDChanged();
                }
            }
        }
        private global::System.Int32 _pkBancosID;
        partial void OnpkBancosIDChanging(global::System.Int32 value);
        partial void OnpkBancosIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "BancosClientes", "Clientes")]
        public EntityCollection<Clientes> Clientes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clientes>("dbControlCobranzasModel.BancosClientes", "Clientes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clientes>("dbControlCobranzasModel.BancosClientes", "Clientes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbControlCobranzasModel", Name="Clientes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clientes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Clientes object.
        /// </summary>
        /// <param name="pkClientesID">Initial value of the pkClientesID property.</param>
        public static Clientes CreateClientes(global::System.Int32 pkClientesID)
        {
            Clientes clientes = new Clientes();
            clientes.pkClientesID = pkClientesID;
            return clientes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pkClientesID
        {
            get
            {
                return _pkClientesID;
            }
            set
            {
                if (_pkClientesID != value)
                {
                    OnpkClientesIDChanging(value);
                    ReportPropertyChanging("pkClientesID");
                    _pkClientesID = StructuralObject.SetValidValue(value, "pkClientesID");
                    ReportPropertyChanged("pkClientesID");
                    OnpkClientesIDChanged();
                }
            }
        }
        private global::System.Int32 _pkClientesID;
        partial void OnpkClientesIDChanging(global::System.Int32 value);
        partial void OnpkClientesIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "ContratosClientes", "Contratos")]
        public Contratos Contrato
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contratos>("dbControlCobranzasModel.ContratosClientes", "Contratos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contratos>("dbControlCobranzasModel.ContratosClientes", "Contratos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contratos> ContratoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contratos>("dbControlCobranzasModel.ContratosClientes", "Contratos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contratos>("dbControlCobranzasModel.ContratosClientes", "Contratos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "BancosClientes", "Bancos")]
        public Bancos Banco
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bancos>("dbControlCobranzasModel.BancosClientes", "Bancos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bancos>("dbControlCobranzasModel.BancosClientes", "Bancos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bancos> BancoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bancos>("dbControlCobranzasModel.BancosClientes", "Bancos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bancos>("dbControlCobranzasModel.BancosClientes", "Bancos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "usuarioClientes", "usuario")]
        public usuario usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("dbControlCobranzasModel.usuarioClientes", "usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("dbControlCobranzasModel.usuarioClientes", "usuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usuario> usuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("dbControlCobranzasModel.usuarioClientes", "usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usuario>("dbControlCobranzasModel.usuarioClientes", "usuario", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbControlCobranzasModel", Name="Contratos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contratos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contratos object.
        /// </summary>
        /// <param name="pkContratosID">Initial value of the pkContratosID property.</param>
        public static Contratos CreateContratos(global::System.Int32 pkContratosID)
        {
            Contratos contratos = new Contratos();
            contratos.pkContratosID = pkContratosID;
            return contratos;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pkContratosID
        {
            get
            {
                return _pkContratosID;
            }
            set
            {
                if (_pkContratosID != value)
                {
                    OnpkContratosIDChanging(value);
                    ReportPropertyChanging("pkContratosID");
                    _pkContratosID = StructuralObject.SetValidValue(value, "pkContratosID");
                    ReportPropertyChanged("pkContratosID");
                    OnpkContratosIDChanged();
                }
            }
        }
        private global::System.Int32 _pkContratosID;
        partial void OnpkContratosIDChanging(global::System.Int32 value);
        partial void OnpkContratosIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "ContratosClientes", "Clientes")]
        public EntityCollection<Clientes> Clientes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clientes>("dbControlCobranzasModel.ContratosClientes", "Clientes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clientes>("dbControlCobranzasModel.ContratosClientes", "Clientes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "DetallesContratosContratos", "DetallesContratos")]
        public DetallesContratos DetallesContrato
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DetallesContratos>("dbControlCobranzasModel.DetallesContratosContratos", "DetallesContratos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DetallesContratos>("dbControlCobranzasModel.DetallesContratosContratos", "DetallesContratos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DetallesContratos> DetallesContratoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DetallesContratos>("dbControlCobranzasModel.DetallesContratosContratos", "DetallesContratos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DetallesContratos>("dbControlCobranzasModel.DetallesContratosContratos", "DetallesContratos", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbControlCobranzasModel", Name="DetallesContratos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DetallesContratos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DetallesContratos object.
        /// </summary>
        /// <param name="pkDetallesContratosID">Initial value of the pkDetallesContratosID property.</param>
        public static DetallesContratos CreateDetallesContratos(global::System.Int32 pkDetallesContratosID)
        {
            DetallesContratos detallesContratos = new DetallesContratos();
            detallesContratos.pkDetallesContratosID = pkDetallesContratosID;
            return detallesContratos;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pkDetallesContratosID
        {
            get
            {
                return _pkDetallesContratosID;
            }
            set
            {
                if (_pkDetallesContratosID != value)
                {
                    OnpkDetallesContratosIDChanging(value);
                    ReportPropertyChanging("pkDetallesContratosID");
                    _pkDetallesContratosID = StructuralObject.SetValidValue(value, "pkDetallesContratosID");
                    ReportPropertyChanged("pkDetallesContratosID");
                    OnpkDetallesContratosIDChanged();
                }
            }
        }
        private global::System.Int32 _pkDetallesContratosID;
        partial void OnpkDetallesContratosIDChanging(global::System.Int32 value);
        partial void OnpkDetallesContratosIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "DetallesContratosContratos", "Contratos")]
        public EntityCollection<Contratos> Contratos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contratos>("dbControlCobranzasModel.DetallesContratosContratos", "Contratos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contratos>("dbControlCobranzasModel.DetallesContratosContratos", "Contratos", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbControlCobranzasModel", Name="persona")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class persona : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new persona object.
        /// </summary>
        /// <param name="pkPersonaID">Initial value of the pkPersonaID property.</param>
        public static persona Createpersona(global::System.Int32 pkPersonaID)
        {
            persona persona = new persona();
            persona.pkPersonaID = pkPersonaID;
            return persona;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pkPersonaID
        {
            get
            {
                return _pkPersonaID;
            }
            set
            {
                if (_pkPersonaID != value)
                {
                    OnpkPersonaIDChanging(value);
                    ReportPropertyChanging("pkPersonaID");
                    _pkPersonaID = StructuralObject.SetValidValue(value, "pkPersonaID");
                    ReportPropertyChanged("pkPersonaID");
                    OnpkPersonaIDChanged();
                }
            }
        }
        private global::System.Int32 _pkPersonaID;
        partial void OnpkPersonaIDChanging(global::System.Int32 value);
        partial void OnpkPersonaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asNombre
        {
            get
            {
                return _asNombre;
            }
            set
            {
                OnasNombreChanging(value);
                ReportPropertyChanging("asNombre");
                _asNombre = StructuralObject.SetValidValue(value, true, "asNombre");
                ReportPropertyChanged("asNombre");
                OnasNombreChanged();
            }
        }
        private global::System.String _asNombre;
        partial void OnasNombreChanging(global::System.String value);
        partial void OnasNombreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asApellido
        {
            get
            {
                return _asApellido;
            }
            set
            {
                OnasApellidoChanging(value);
                ReportPropertyChanging("asApellido");
                _asApellido = StructuralObject.SetValidValue(value, true, "asApellido");
                ReportPropertyChanged("asApellido");
                OnasApellidoChanged();
            }
        }
        private global::System.String _asApellido;
        partial void OnasApellidoChanging(global::System.String value);
        partial void OnasApellidoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "FK_usuarios_personas", "usuarios")]
        public EntityCollection<usuario> usuarios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usuario>("dbControlCobranzasModel.FK_usuarios_personas", "usuarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usuario>("dbControlCobranzasModel.FK_usuarios_personas", "usuarios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbControlCobranzasModel", Name="rolUsuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rolUsuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new rolUsuario object.
        /// </summary>
        /// <param name="pkRolUsuarioID">Initial value of the pkRolUsuarioID property.</param>
        public static rolUsuario CreaterolUsuario(global::System.Int32 pkRolUsuarioID)
        {
            rolUsuario rolUsuario = new rolUsuario();
            rolUsuario.pkRolUsuarioID = pkRolUsuarioID;
            return rolUsuario;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pkRolUsuarioID
        {
            get
            {
                return _pkRolUsuarioID;
            }
            set
            {
                if (_pkRolUsuarioID != value)
                {
                    OnpkRolUsuarioIDChanging(value);
                    ReportPropertyChanging("pkRolUsuarioID");
                    _pkRolUsuarioID = StructuralObject.SetValidValue(value, "pkRolUsuarioID");
                    ReportPropertyChanged("pkRolUsuarioID");
                    OnpkRolUsuarioIDChanged();
                }
            }
        }
        private global::System.Int32 _pkRolUsuarioID;
        partial void OnpkRolUsuarioIDChanging(global::System.Int32 value);
        partial void OnpkRolUsuarioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asDescripcion
        {
            get
            {
                return _asDescripcion;
            }
            set
            {
                OnasDescripcionChanging(value);
                ReportPropertyChanging("asDescripcion");
                _asDescripcion = StructuralObject.SetValidValue(value, true, "asDescripcion");
                ReportPropertyChanged("asDescripcion");
                OnasDescripcionChanged();
            }
        }
        private global::System.String _asDescripcion;
        partial void OnasDescripcionChanging(global::System.String value);
        partial void OnasDescripcionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "FK_usuarios_rolUsuario", "usuarios")]
        public EntityCollection<usuario> usuarios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usuario>("dbControlCobranzasModel.FK_usuarios_rolUsuario", "usuarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usuario>("dbControlCobranzasModel.FK_usuarios_rolUsuario", "usuarios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbControlCobranzasModel", Name="usuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usuario object.
        /// </summary>
        /// <param name="pkUsuariosID">Initial value of the pkUsuariosID property.</param>
        public static usuario Createusuario(global::System.Int32 pkUsuariosID)
        {
            usuario usuario = new usuario();
            usuario.pkUsuariosID = pkUsuariosID;
            return usuario;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pkUsuariosID
        {
            get
            {
                return _pkUsuariosID;
            }
            set
            {
                if (_pkUsuariosID != value)
                {
                    OnpkUsuariosIDChanging(value);
                    ReportPropertyChanging("pkUsuariosID");
                    _pkUsuariosID = StructuralObject.SetValidValue(value, "pkUsuariosID");
                    ReportPropertyChanged("pkUsuariosID");
                    OnpkUsuariosIDChanged();
                }
            }
        }
        private global::System.Int32 _pkUsuariosID;
        partial void OnpkUsuariosIDChanging(global::System.Int32 value);
        partial void OnpkUsuariosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asUsername
        {
            get
            {
                return _asUsername;
            }
            set
            {
                OnasUsernameChanging(value);
                ReportPropertyChanging("asUsername");
                _asUsername = StructuralObject.SetValidValue(value, true, "asUsername");
                ReportPropertyChanged("asUsername");
                OnasUsernameChanged();
            }
        }
        private global::System.String _asUsername;
        partial void OnasUsernameChanging(global::System.String value);
        partial void OnasUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String asPassword
        {
            get
            {
                return _asPassword;
            }
            set
            {
                OnasPasswordChanging(value);
                ReportPropertyChanging("asPassword");
                _asPassword = StructuralObject.SetValidValue(value, true, "asPassword");
                ReportPropertyChanged("asPassword");
                OnasPasswordChanged();
            }
        }
        private global::System.String _asPassword;
        partial void OnasPasswordChanging(global::System.String value);
        partial void OnasPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fkPersonaID
        {
            get
            {
                return _fkPersonaID;
            }
            set
            {
                OnfkPersonaIDChanging(value);
                ReportPropertyChanging("fkPersonaID");
                _fkPersonaID = StructuralObject.SetValidValue(value, "fkPersonaID");
                ReportPropertyChanged("fkPersonaID");
                OnfkPersonaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _fkPersonaID;
        partial void OnfkPersonaIDChanging(Nullable<global::System.Int32> value);
        partial void OnfkPersonaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> fkRolUsuarioID
        {
            get
            {
                return _fkRolUsuarioID;
            }
            set
            {
                OnfkRolUsuarioIDChanging(value);
                ReportPropertyChanging("fkRolUsuarioID");
                _fkRolUsuarioID = StructuralObject.SetValidValue(value, "fkRolUsuarioID");
                ReportPropertyChanged("fkRolUsuarioID");
                OnfkRolUsuarioIDChanged();
            }
        }
        private Nullable<global::System.Int32> _fkRolUsuarioID;
        partial void OnfkRolUsuarioIDChanging(Nullable<global::System.Int32> value);
        partial void OnfkRolUsuarioIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "FK_usuarios_personas", "personas")]
        public persona persona
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<persona>("dbControlCobranzasModel.FK_usuarios_personas", "personas").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<persona>("dbControlCobranzasModel.FK_usuarios_personas", "personas").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<persona> personaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<persona>("dbControlCobranzasModel.FK_usuarios_personas", "personas");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<persona>("dbControlCobranzasModel.FK_usuarios_personas", "personas", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "FK_usuarios_rolUsuario", "rolUsuario")]
        public rolUsuario rolUsuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rolUsuario>("dbControlCobranzasModel.FK_usuarios_rolUsuario", "rolUsuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rolUsuario>("dbControlCobranzasModel.FK_usuarios_rolUsuario", "rolUsuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rolUsuario> rolUsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rolUsuario>("dbControlCobranzasModel.FK_usuarios_rolUsuario", "rolUsuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<rolUsuario>("dbControlCobranzasModel.FK_usuarios_rolUsuario", "rolUsuario", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbControlCobranzasModel", "usuarioClientes", "Clientes")]
        public EntityCollection<Clientes> Clientes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clientes>("dbControlCobranzasModel.usuarioClientes", "Clientes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clientes>("dbControlCobranzasModel.usuarioClientes", "Clientes", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
